<center>四. 追求美的Blog<center>
----
*（为什么讲了一点点功能就开始说前端美化呢？因为我个人认为一个网站的好与坏取决于两方面：性能与界面，当然这里的界面不仅仅指所看到的东西，还指操作逻辑，扯远了。我觉得迅速给读者带来美的体验是一个网站开发教程不可或缺的，只有最快的看到自己的成果，读者才能有兴趣继续学习，所以我们先讲如何美化，接下来再说其他功能的补全）*

*（其实这一章所谓的“美化”一定会让前端工作者笑掉大牙的，可惜我们只是可怜的程序员，就先将就一下吧，效果图如下）*

![](./chapter4_final.png)

##1. Rails对CSS和Javascript的支持策略

Rails对于CSS的支持其实很简单，它通过在`/app/assets/stylesheets`声明的各个`.css.scss`文件进行映射达到使用CSS的目的。由于我们仅仅是想使用一些现有的CSS和Javascript库，所以相对简单，不需要太多的步骤。

##2. 使用前段库Bootstrap

Bootstrap是Twitter推出的一个开源的用于前端开发的工具包。它由Twitter的设计师Mark Otto和Jacob Thornton合作开发，是一个CSS/HTML框架。Bootstrap的代码可以在[这里](http://twitter.github.io/bootstrap/)下载到，在[这里](http://www.bootcss.com)可以看到它的中文指导。

下载完毕之后，解压，进入bootstrap文件夹，你应该可以看到三个文件夹，分别是`css`、`img`和`js`，分别将其中的`bootstrap.css` `glyphicons-halflings.png`和`bootstrap.js`拷贝到`/app/asset/stylesheets`、`/app/asset/images`、`/app/asset/javascripts`下，ok，可以使用了~

打开`/app/views/articles/index.html.erb`，将最后一句改为下面这样：

	<%= button_to 'New Article', new_article_path ,:class=>"btn btn-primary"%>

刷新一下`localhost:3000`，我们可以看到页面里的<New Article>的链接变成了这个样子：

![](./images/charpter4_NewArticle.png)

上面那句话的含义是这样的：一个名叫New Article的按钮，指向new_article_path这个路径（关于路径请参见[charpter3_粗糙的Blog](./charpter3_粗糙的Blog.mkd)里的**附 Rails路由器入门**），他的class是“btn btn-primary”。Rails在翻译的时候会根据这个class的名称去`/app/assets/stylesheets`里寻找对应的CSS描述，引入相应的CSS文件，最终由浏览器去解释成相应的页面。

好了，我们作为一群有美学追求的程序猿，我们需要想想我们的Blog需要做成什么样子：
>1）我们需要一个统一的标题栏，这个标题栏我们放置自己Blog的名字，喜欢的图片，以及一些链接，比如“首页、分类，搜索……”，另外我们需要一个现实用户登陆的东西并且在这个按钮下有诸多属于用户的选项，比如“编辑个人资料，修改密码，退出登陆……”，最后要说的是一些效果，比如在鼠标移到标题栏的某一个标题上时，我们希望有一些下拉或者变色的效果，就像是[这里]()，等等

>2）我们希望左右都有一定的间距，不希望有文字出现，这样的阅读体验也许会更加美妙。

>3）我们也许希望每一个标签都有它自己的颜色。点击时能够搜索出拥有这个标签的所有的Blog。

>4）关于色调我个人喜欢暗色调，磨砂的质感是最棒的了。

>5）要不来个关键字？或者关键字球？（个球？？？！！！）

Ok，开工。

##3. 一些误区与矛盾

1.button_to和link_to

























